name: Library Build & Publish

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

permissions:
  contents: write

jobs:
  build-deploy:
    name: Build, Version, Storybook & Publish
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org/'

      # 3. Setup pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      # 4. Setup pnpm cache
      - name: Get pnpm store path
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Cache pnpm store
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # 5. Install dependencies
      - name: Install dependencies
        run: pnpm install

      # 6. Build library
      - name: Build library
        run: pnpm run build

      # 7. Increment version (minor) and commit
      - name: Bump version
        run: |
          pnpm version minor --no-git-tag-version
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json
          git commit -m "ci: bump version for release [ci skip]" || echo "No changes to commit"
          git push || echo "Push failed, possibly no changes"

      # 8. Build Storybook
      - name: Build Storybook
        run: pnpm run build-storybook

      # 9. Deploy Storybook to GitHub Pages
      - name: Deploy Storybook to GitHub Pages
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # Atualiza remote com token para autenticação
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git
          pnpm run deploy-storybook

      # 10. Publish package to npm (ignora checks de git sujo)
      - name: Publish package
        run: pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
